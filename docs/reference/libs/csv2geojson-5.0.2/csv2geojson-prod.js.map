{"version":3,"file":"csv2geojson-prod.js","mappings":"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","sources":["webpack://window.csv2geojson/./node_modules/@mapbox/sexagesimal/index.js","webpack://window.csv2geojson/./node_modules/csv2geojson/index.js","webpack://window.csv2geojson/./node_modules/d3-dsv/src/dsv.js","webpack://window.csv2geojson/./node_modules/d3-dsv/src/csv.js","webpack://window.csv2geojson/./node_modules/d3-dsv/src/tsv.js","webpack://window.csv2geojson/webpack/bootstrap","webpack://window.csv2geojson/webpack/runtime/define property getters","webpack://window.csv2geojson/webpack/runtime/hasOwnProperty shorthand","webpack://window.csv2geojson/webpack/runtime/make namespace object","webpack://window.csv2geojson/webpack/startup"],"sourcesContent":["module.exports = element;\nmodule.exports.pair = pair;\nmodule.exports.format = format;\nmodule.exports.formatPair = formatPair;\nmodule.exports.coordToDMS = coordToDMS;\n\n\nfunction element(input, dims) {\n  var result = search(input, dims);\n  return (result === null) ? null : result.val;\n}\n\n\nfunction formatPair(input) {\n  return format(input.lat, 'lat') + ' ' + format(input.lon, 'lon');\n}\n\n\n// Is 0 North or South?\nfunction format(input, dim) {\n  var dms = coordToDMS(input, dim);\n  return dms.whole + 'Â° ' +\n    (dms.minutes ? dms.minutes + '\\' ' : '') +\n    (dms.seconds ? dms.seconds + '\" ' : '') + dms.dir;\n}\n\n\nfunction coordToDMS(input, dim) {\n  var dirs = { lat: ['N', 'S'], lon: ['E', 'W'] }[dim] || '';\n  var dir = dirs[input >= 0 ? 0 : 1];\n  var abs = Math.abs(input);\n  var whole = Math.floor(abs);\n  var fraction = abs - whole;\n  var fractionMinutes = fraction * 60;\n  var minutes = Math.floor(fractionMinutes);\n  var seconds = Math.floor((fractionMinutes - minutes) * 60);\n\n  return {\n    whole: whole,\n    minutes: minutes,\n    seconds: seconds,\n    dir: dir\n  };\n}\n\n\nfunction search(input, dims) {\n  if (!dims) dims = 'NSEW';\n  if (typeof input !== 'string') return null;\n\n  input = input.toUpperCase();\n  var regex = /^[\\s\\,]*([NSEW])?\\s*([\\-|\\â|\\â]?[0-9.]+)[Â°ÂºË]?\\s*(?:([0-9.]+)['ââ²â]\\s*)?(?:([0-9.]+)(?:''|\"|â|â³)\\s*)?([NSEW])?/;\n\n  var m = input.match(regex);\n  if (!m) return null;  // no match\n\n  var matched = m[0];\n\n  // extract dimension.. m[1] = leading, m[5] = trailing\n  var dim;\n  if (m[1] && m[5]) {                 // if matched both..\n    dim = m[1];                       // keep leading\n    matched = matched.slice(0, -1);   // remove trailing dimension from match\n  } else {\n    dim = m[1] || m[5];\n  }\n\n  // if unrecognized dimension\n  if (dim && dims.indexOf(dim) === -1) return null;\n\n  // extract DMS\n  var deg = m[2] ? parseFloat(m[2]) : 0;\n  var min = m[3] ? parseFloat(m[3]) / 60 : 0;\n  var sec = m[4] ? parseFloat(m[4]) / 3600 : 0;\n  var sign = (deg < 0) ? -1 : 1;\n  if (dim === 'S' || dim === 'W') sign *= -1;\n\n  return {\n    val: (Math.abs(deg) + min + sec) * sign,\n    dim: dim,\n    matched: matched,\n    remain: input.slice(matched.length)\n  };\n}\n\n\nfunction pair(input, dims) {\n  input = input.trim();\n  var one = search(input, dims);\n  if (!one) return null;\n\n  input = one.remain.trim();\n  var two = search(input, dims);\n  if (!two || two.remain) return null;\n\n  if (one.dim) {\n    return swapdim(one.val, two.val, one.dim);\n  } else {\n    return [one.val, two.val];\n  }\n}\n\n\nfunction swapdim(a, b, dim) {\n  if (dim === 'N' || dim === 'S') return [a, b];\n  if (dim === 'W' || dim === 'E') return [b, a];\n}\n","'use strict';\n\nvar dsv = require('d3-dsv'),\n    sexagesimal = require('@mapbox/sexagesimal');\n\nvar latRegex = /(Lat)(itude)?/gi,\n    lonRegex = /(L)(on|ng)(gitude)?/i;\n\nfunction guessHeader(row, regexp) {\n    var name, match, score;\n    for (var f in row) {\n        match = f.match(regexp);\n        if (match && (!name || match[0].length / f.length > score)) {\n            score = match[0].length / f.length;\n            name = f;\n        }\n    }\n    return name;\n}\n\nfunction guessLatHeader(row) { return guessHeader(row, latRegex); }\nfunction guessLonHeader(row) { return guessHeader(row, lonRegex); }\n\nfunction isLat(f) { return !!f.match(latRegex); }\nfunction isLon(f) { return !!f.match(lonRegex); }\n\nfunction keyCount(o) {\n    return (typeof o == 'object') ? Object.keys(o).length : 0;\n}\n\nfunction autoDelimiter(x) {\n    var delimiters = [',', ';', '\\t', '|'];\n    var results = [];\n\n    delimiters.forEach(function (delimiter) {\n        var res = dsv.dsvFormat(delimiter).parse(x);\n        if (res.length >= 1) {\n            var count = keyCount(res[0]);\n            for (var i = 0; i < res.length; i++) {\n                if (keyCount(res[i]) !== count) return;\n            }\n            results.push({\n                delimiter: delimiter,\n                arity: Object.keys(res[0]).length,\n            });\n        }\n    });\n\n    if (results.length) {\n        return results.sort(function (a, b) {\n            return b.arity - a.arity;\n        })[0].delimiter;\n    } else {\n        return null;\n    }\n}\n\n/**\n * Silly stopgap for dsv to d3-dsv upgrade\n *\n * @param {Array} x dsv output\n * @returns {Array} array without columns member\n */\nfunction deleteColumns(x) {\n    delete x.columns;\n    return x;\n}\n\nfunction auto(x) {\n    var delimiter = autoDelimiter(x);\n    if (!delimiter) return null;\n    return deleteColumns(dsv.dsvFormat(delimiter).parse(x));\n}\n\nfunction csv2geojson(x, options, callback) {\n\n    if (!callback) {\n        callback = options;\n        options = {};\n    }\n\n    options.delimiter = options.delimiter || ',';\n\n    var latfield = options.latfield || '',\n        lonfield = options.lonfield || '',\n        crs = options.crs || '';\n\n    var features = [],\n        featurecollection = {type: 'FeatureCollection', features: features};\n\n    if (crs !== '') {\n        featurecollection.crs = {type: 'name', properties: {name: crs}};\n    }\n\n    if (options.delimiter === 'auto' && typeof x == 'string') {\n        options.delimiter = autoDelimiter(x);\n        if (!options.delimiter) {\n            callback({\n                type: 'Error',\n                message: 'Could not autodetect delimiter'\n            });\n            return;\n        }\n    }\n\n    var numericFields = options.numericFields ? options.numericFields.split(',') : null;\n\n    var parsed = (typeof x == 'string') ?\n        dsv.dsvFormat(options.delimiter).parse(x, function (d) {\n            if (numericFields) {\n                for (var key in d) {\n                    if (numericFields.includes(key)) {\n                        d[key] = +d[key];\n                    }\n                }\n            }\n            return d;\n        }) : x;\n\n    if (!parsed.length) {\n        callback(null, featurecollection);\n        return;\n    }\n\n    var errors = [];\n    var i;\n\n\n    if (!latfield) latfield = guessLatHeader(parsed[0]);\n    if (!lonfield) lonfield = guessLonHeader(parsed[0]);\n    var noGeometry = (!latfield || !lonfield);\n\n    if (noGeometry) {\n        for (i = 0; i < parsed.length; i++) {\n            features.push({\n                type: 'Feature',\n                properties: parsed[i],\n                geometry: null\n            });\n        }\n        callback(errors.length ? errors : null, featurecollection);\n        return;\n    }\n\n    for (i = 0; i < parsed.length; i++) {\n        if (parsed[i][lonfield] !== undefined &&\n            parsed[i][latfield] !== undefined) {\n\n            var lonk = parsed[i][lonfield],\n                latk = parsed[i][latfield],\n                lonf, latf,\n                a;\n\n            a = sexagesimal(lonk, 'EW');\n            if (a) lonk = a;\n            a = sexagesimal(latk, 'NS');\n            if (a) latk = a;\n\n            lonf = parseFloat(lonk);\n            latf = parseFloat(latk);\n\n            if (isNaN(lonf) ||\n                isNaN(latf)) {\n                errors.push({\n                    message: 'A row contained an invalid value for latitude or longitude',\n                    row: parsed[i],\n                    index: i\n                });\n            } else {\n                if (!options.includeLatLon) {\n                    delete parsed[i][lonfield];\n                    delete parsed[i][latfield];\n                }\n\n                features.push({\n                    type: 'Feature',\n                    properties: parsed[i],\n                    geometry: {\n                        type: 'Point',\n                        coordinates: [\n                            parseFloat(lonf),\n                            parseFloat(latf)\n                        ]\n                    }\n                });\n            }\n        }\n    }\n\n    callback(errors.length ? errors : null, featurecollection);\n}\n\nfunction toLine(gj) {\n    var features = gj.features;\n    var line = {\n        type: 'Feature',\n        geometry: {\n            type: 'LineString',\n            coordinates: []\n        }\n    };\n    for (var i = 0; i < features.length; i++) {\n        line.geometry.coordinates.push(features[i].geometry.coordinates);\n    }\n    line.properties = features.reduce(function (aggregatedProperties, newFeature) {\n        for (var key in newFeature.properties) {\n            if (!aggregatedProperties[key]) {\n                aggregatedProperties[key] = [];\n            }\n            aggregatedProperties[key].push(newFeature.properties[key]);\n        }\n        return aggregatedProperties;\n    }, {});\n    return {\n        type: 'FeatureCollection',\n        features: [line]\n    };\n}\n\nfunction toPolygon(gj) {\n    var features = gj.features;\n    var poly = {\n        type: 'Feature',\n        geometry: {\n            type: 'Polygon',\n            coordinates: [[]]\n        }\n    };\n    for (var i = 0; i < features.length; i++) {\n        poly.geometry.coordinates[0].push(features[i].geometry.coordinates);\n    }\n    poly.properties = features.reduce(function (aggregatedProperties, newFeature) {\n        for (var key in newFeature.properties) {\n            if (!aggregatedProperties[key]) {\n                aggregatedProperties[key] = [];\n            }\n            aggregatedProperties[key].push(newFeature.properties[key]);\n        }\n        return aggregatedProperties;\n    }, {});\n    return {\n        type: 'FeatureCollection',\n        features: [poly]\n    };\n}\n\nmodule.exports = {\n    isLon: isLon,\n    isLat: isLat,\n    guessLatHeader: guessLatHeader,\n    guessLonHeader: guessLonHeader,\n    csv: dsv.csvParse,\n    tsv: dsv.tsvParse,\n    dsv: dsv,\n    auto: auto,\n    csv2geojson: csv2geojson,\n    toLine: toLine,\n    toPolygon: toPolygon\n};\n","function objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(734);\n"],"names":["format","input","dim","dms","coordToDMS","whole","minutes","seconds","dir","lat","lon","abs","Math","floor","fractionMinutes","search","dims","m","toUpperCase","match","matched","slice","indexOf","deg","parseFloat","min","sec","sign","val","remain","length","module","exports","result","pair","one","trim","a","b","two","formatPair","dsv","sexagesimal","latRegex","lonRegex","guessHeader","row","regexp","name","score","f","guessLatHeader","guessLonHeader","keyCount","o","Object","keys","autoDelimiter","x","results","forEach","delimiter","res","dsvFormat","parse","count","i","push","arity","sort","isLon","isLat","csv","csvParse","tsv","tsvParse","auto","columns","deleteColumns","csv2geojson","options","callback","latfield","lonfield","crs","features","featurecollection","type","properties","numericFields","split","parsed","d","key","includes","errors","undefined","lonf","latf","lonk","latk","isNaN","message","index","includeLatLon","geometry","coordinates","toLine","gj","line","reduce","aggregatedProperties","newFeature","toPolygon","poly","objectConverter","Function","map","JSON","stringify","join","reFormat","RegExp","delimiterCode","charCodeAt","parseRows","text","t","eol","EOL","EOF","rows","N","I","n","token","c","j","replace","k","formatRow","formatValue","test","convert","object","customConverter","columnSet","create","column","inferColumns","concat","formatRows","csvParseRows","csvFormat","csvFormatRows","tsvParseRows","tsvFormat","tsvFormatRows","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","__webpack_exports__"],"sourceRoot":""}