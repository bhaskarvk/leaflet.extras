(()=>{var n={};(function(n){"use strict";function t(){}function r(n){if(!n)return t;var r,e,o=n.scale[0],i=n.scale[1],u=n.translate[0],c=n.translate[1];return function(n,t){t||(r=e=0),n[0]=(r+=n[0])*o+u,n[1]=(e+=n[1])*i+c}}function e(n,t){for(var r=0,e=n.length;r<e;){var o=r+e>>>1;n[o]<t?r=o+1:e=o}return r}function o(n,t){var r={type:"Feature",id:t.id,properties:t.properties||{},geometry:i(n,t)};return null==t.id&&delete r.id,r}function i(n,t){var e=r(n.transform),o=n.arcs;function i(n,t){t.length&&t.pop();for(var r,i=o[n<0?~n:n],u=0,c=i.length;u<c;++u)t.push(r=i[u].slice()),e(r,u);n<0&&function(n,t){for(var r,e=n.length,o=e-t;o<--e;)r=n[o],n[o++]=n[e],n[e]=r}(t,c)}function u(n){return n=n.slice(),e(n,0),n}function c(n){for(var t=[],r=0,e=n.length;r<e;++r)i(n[r],t);return t.length<2&&t.push(t[0].slice()),t}function a(n){for(var t=c(n);t.length<4;)t.push(t[0].slice());return t}function f(n){return n.map(a)}var s={Point:function(n){return u(n.coordinates)},MultiPoint:function(n){return n.coordinates.map(u)},LineString:function(n){return c(n.arcs)},MultiLineString:function(n){return n.arcs.map(c)},Polygon:function(n){return f(n.arcs)},MultiPolygon:function(n){return n.arcs.map(f)}};return function n(t){var r=t.type;return"GeometryCollection"===r?{type:r,geometries:t.geometries.map(n)}:r in s?{type:r,coordinates:s[r](t)}:null}(t)}function u(n,t){var r={},e={},o={},i=[],u=-1;function c(n,t){for(var e in n){var o=n[e];delete t[o.start],delete o.start,delete o.end,o.forEach((function(n){r[n<0?~n:n]=1})),i.push(o)}}return t.forEach((function(r,e){var o,i=n.arcs[r<0?~r:r];i.length<3&&!i[1][0]&&!i[1][1]&&(o=t[++u],t[u]=r,t[e]=o)})),t.forEach((function(t){var r,i,u=function(t){var r,e=n.arcs[t<0?~t:t],o=e[0];return n.transform?(r=[0,0],e.forEach((function(n){r[0]+=n[0],r[1]+=n[1]}))):r=e[e.length-1],t<0?[r,o]:[o,r]}(t),c=u[0],a=u[1];if(r=o[c])if(delete o[r.end],r.push(t),r.end=a,i=e[a]){delete e[i.start];var f=i===r?r:r.concat(i);e[f.start=r.start]=o[f.end=i.end]=f}else e[r.start]=o[r.end]=r;else if(r=e[a])if(delete e[r.start],r.unshift(t),r.start=c,i=o[c]){delete o[i.end];var s=i===r?r:i.concat(r);e[s.start=i.start]=o[s.end=r.end]=s}else e[r.start]=o[r.end]=r;else e[(r=[t]).start=c]=o[r.end=a]=r})),c(o,e),c(e,o),t.forEach((function(n){r[n<0?~n:n]||i.push([n])})),i}function c(n,t,r){var e=[];function o(n){var t=n<0?~n:n;(f[t]||(f[t]=[])).push({i:n,g:a})}function i(n){n.forEach(o)}function c(n){n.forEach(i)}if(arguments.length>1){var a,f=[],s={LineString:i,MultiLineString:c,Polygon:c,MultiPolygon:function(n){n.forEach(c)}};(function n(t){"GeometryCollection"===t.type?t.geometries.forEach(n):t.type in s&&(a=t,s[t.type](t.arcs))})(t),f.forEach(arguments.length<3?function(n){e.push(n[0].i)}:function(n){r(n[0].g,n[n.length-1].g)&&e.push(n[0].i)})}else for(var l=0,h=n.arcs.length;l<h;++l)e.push(l);return{type:"MultiLineString",arcs:u(n,e)}}function a(n){var t=n[0],r=n[1],e=n[2];return Math.abs((t[0]-e[0])*(r[1]-t[1])-(t[0]-r[0])*(e[1]-t[1]))}function f(n,t){var r={},e=[],o=[];function c(n){n.forEach((function(t){t.forEach((function(t){(r[t=t<0?~t:t]||(r[t]=[])).push(n)}))})),e.push(n)}function a(t){return Math.abs(function(n){for(var t,r=-1,e=n.length,o=n[e-1],i=0;++r<e;)t=o,o=n[r],i+=t[0]*o[1]-t[1]*o[0];return i/2}(i(n,{type:"Polygon",arcs:[t]}).coordinates[0]))}return t.forEach((function(n){"Polygon"===n.type?c(n.arcs):"MultiPolygon"===n.type&&n.arcs.forEach(c)})),e.forEach((function(n){if(!n._){var t=[],e=[n];for(n._=1,o.push(t);n=e.pop();)t.push(n),n.forEach((function(n){n.forEach((function(n){r[n<0?~n:n].forEach((function(n){n._||(n._=1,e.push(n))}))}))}))}})),e.forEach((function(n){delete n._})),{type:"MultiPolygon",arcs:o.map((function(t){var e,o=[];if(t.forEach((function(n){n.forEach((function(n){n.forEach((function(n){r[n<0?~n:n].length<2&&o.push(n)}))}))})),(e=(o=u(n,o)).length)>1)for(var i,c,f=1,s=a(o[0]);f<e;++f)(i=a(o[f]))>s&&(c=o[0],o[0]=o[f],o[f]=c,s=i);return o}))}}function s(n,t){return n[1][2]-t[1][2]}n.version="1.6.26",n.mesh=function(n){return i(n,c.apply(this,arguments))},n.meshArcs=c,n.merge=function(n){return i(n,f.apply(this,arguments))},n.mergeArcs=f,n.feature=function(n,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map((function(t){return o(n,t)}))}:o(n,t)},n.neighbors=function(n){var t={},r=n.map((function(){return[]}));function o(n,r){n.forEach((function(n){n<0&&(n=~n);var e=t[n];e?e.push(r):t[n]=[r]}))}function i(n,t){n.forEach((function(n){o(n,t)}))}var u={LineString:o,MultiLineString:i,Polygon:i,MultiPolygon:function(n,t){n.forEach((function(n){i(n,t)}))}};for(var c in n.forEach((function n(t,r){"GeometryCollection"===t.type?t.geometries.forEach((function(t){n(t,r)})):t.type in u&&u[t.type](t.arcs,r)})),t)for(var a=t[c],f=a.length,s=0;s<f;++s)for(var l=s+1;l<f;++l){var h,p=a[s],v=a[l];(h=r[p])[c=e(h,v)]!==v&&h.splice(c,0,v),(h=r[v])[c=e(h,p)]!==p&&h.splice(c,0,p)}return r},n.presimplify=function(n,e){var o=r(n.transform),i=function(n){if(!n)return t;var r,e,o=n.scale[0],i=n.scale[1],u=n.translate[0],c=n.translate[1];return function(n,t){t||(r=e=0);var a=Math.round((n[0]-u)/o),f=Math.round((n[1]-c)/i);n[0]=a-r,n[1]=f-e,r=a,e=f}}(n.transform),u=function(){var n={},t=[],r=0;function e(n,r){for(;r>0;){var e=(r+1>>1)-1,o=t[e];if(s(n,o)>=0)break;t[o._=r]=o,t[n._=r=e]=n}}function o(n,e){for(;;){var o=e+1<<1,i=o-1,u=e,c=t[u];if(i<r&&s(t[i],c)<0&&(c=t[u=i]),o<r&&s(t[o],c)<0&&(c=t[u=o]),u===e)break;t[c._=e]=c,t[n._=e=u]=n}}return n.push=function(n){return e(t[n._=r]=n,r++),r},n.pop=function(){if(!(r<=0)){var n,e=t[0];return--r>0&&(n=t[r],o(t[n._=0]=n,0)),e}},n.remove=function(n){var i,u=n._;if(t[u]===n)return u!==--r&&(s(i=t[r],n)<0?e:o)(t[i._=u]=i,u),u},n}();function c(n){u.remove(n),n[1][2]=e(n),u.push(n)}return e||(e=a),n.arcs.forEach((function(n){var t,r,a,f,s=[],l=0;for(r=0,a=n.length;r<a;++r)f=n[r],o(n[r]=[f[0],f[1],1/0],r);for(r=1,a=n.length-1;r<a;++r)(t=n.slice(r-1,r+2))[1][2]=e(t),s.push(t),u.push(t);for(r=0,a=s.length;r<a;++r)(t=s[r]).previous=s[r-1],t.next=s[r+1];for(;t=u.pop();){var h=t.previous,p=t.next;t[1][2]<l?t[1][2]=l:l=t[1][2],h&&(h.next=p,h[2]=t[2],c(h)),p&&(p.previous=h,p[0]=t[0],c(p))}n.forEach(i)})),n}})(n),topojson=n})();
//# sourceMappingURL=topojson-prod.js.map