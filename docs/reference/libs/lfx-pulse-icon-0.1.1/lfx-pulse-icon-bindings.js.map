{"version":3,"file":"lfx-pulse-icon-bindings.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH","sources":["webpack://leaflet.extras/./inst/htmlwidgets/bindings/lfx-pulse-icon-bindings.js"],"sourcesContent":["/* global LeafletWidget, $, L */\r\n\r\nLeafletWidget.methods.addPulseMarkers = function(\r\n  lat, lng, icon, layerId, group, options,\r\n  popup, popupOptions, clusterOptions, clusterId, label, labelOptions) {\r\n  (function(){\r\n    var icondf;\r\n\r\n    var getIcon;\r\n    if (icon) {\r\n\r\n      // This cbinds the icon URLs and any other icon options; they're all\r\n      // present on the icon object.\r\n      icondf = new LeafletWidget.DataFrame().cbind(icon);\r\n\r\n      // Constructs an icon from a specified row of the icon dataframe.\r\n      getIcon = function(i) {\r\n        var opts = icondf.get(i);\r\n        if (!opts) {\r\n          return new L.icon.pulse();\r\n        }\r\n\r\n        opts.iconSize = [opts.iconSize, opts.iconSize];\r\n        return new L.icon.pulse(opts);\r\n      };\r\n    }\r\n\r\n    if(!($.isEmptyObject(lat) || $.isEmptyObject(lng)) ||\r\n      ($.isNumeric(lat) && $.isNumeric(lng))) {\r\n\r\n      var df = new LeafletWidget.DataFrame()\r\n        .col('lat', lat)\r\n        .col('lng', lng)\r\n        .col('layerId', layerId)\r\n        .col('group', group)\r\n        .col('popup', popup)\r\n        .col('popupOptions', popupOptions)\r\n        .col('label', label)\r\n        .col('labelOptions', labelOptions)\r\n        .cbind(options);\r\n\r\n      if (icon) icondf.effectiveLength = df.nrow();\r\n\r\n      LeafletWidget.methods.addGenericMarkers(\r\n        this, df, group, clusterOptions, clusterId, function(df, i) {\r\n          var options = df.get(i);\r\n          if (icon) options.icon = getIcon(i);\r\n          return L.marker([df.get(i, 'lat'), df.get(i, 'lng')], options);\r\n        });\r\n    }\r\n\r\n  }).call(this);\r\n};\r\n"],"names":[],"sourceRoot":""}