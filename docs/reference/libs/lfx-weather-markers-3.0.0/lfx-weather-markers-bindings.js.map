{"version":3,"file":"lfx-weather-markers-bindings.js","mappings":"AACAA,cAAcC,QAAQC,kBAAoB,SACxCC,EAAKC,EAAKC,EAAMC,EAASC,EAAOC,EAChCC,EAAOC,EAAcC,EAAgBC,EAAWC,EAAOC,IACvD,WACE,IAAIC,EAEAC,EA0BJ,GAzBIX,IAIFU,GAAS,IAAIf,cAAciB,WAAYC,MAAMb,GAG7CW,EAAU,SAASG,GACjB,IAAIC,EAAOL,EAAOM,IAAIF,GACtB,OAAKC,GAILA,EAAKE,SAAU,CAAC,GAAI,IACpBF,EAAKG,WAAc,CAAC,GAAI,IACxBH,EAAKI,YAAa,CAAC,GAAI,IACvBJ,EAAKK,aAAc,CAAC,GAAI,IACxBL,EAAKM,WAAY,CAAC,GAAI,IACtBN,EAAKO,UAAW,iBAChBP,EAAKQ,OAAQ,KAEN,IAAIC,EAAEC,eAAeC,KAAKX,IAXxB,IAAIS,EAAEC,eAAeC,IAYhC,IAGGC,EAAEC,cAAc9B,KAAQ6B,EAAEC,cAAc7B,IAC1C4B,EAAEE,UAAU/B,IAAQ6B,EAAEE,UAAU9B,GAAO,CAExC,IAAI+B,GAAK,IAAInC,cAAciB,WACxBmB,IAAI,MAAOjC,GACXiC,IAAI,MAAOhC,GACXgC,IAAI,UAAW9B,GACf8B,IAAI,QAAS7B,GACb6B,IAAI,QAAS3B,GACb2B,IAAI,eAAgB1B,GACpB0B,IAAI,QAASvB,GACbuB,IAAI,eAAgBtB,GACpBI,MAAMV,GAELH,IAAMU,EAAOsB,gBAAkBF,EAAGG,QAEtCtC,cAAcC,QAAQsC,kBACpBC,KAAML,EAAI5B,EAAOI,EAAgBC,GAAW,SAASuB,EAAIhB,GACvD,IAAIX,EAAU2B,EAAGd,IAAIF,GAErB,OADId,IAAMG,EAAQH,KAAOW,EAAQG,IAC1BU,EAAEY,OAAO,CAACN,EAAGd,IAAIF,EAAG,OAAQgB,EAAGd,IAAIF,EAAG,QAASX,EACxD,GACJ,CAED,GAAEkC,KAAKF,KACV","sources":["webpack://leaflet.extras/./inst/htmlwidgets/bindings/lfx-weather-markers-bindings.js"],"sourcesContent":["/* global LeafletWidget, $, L */\r\nLeafletWidget.methods.addWeatherMarkers = function(\r\n  lat, lng, icon, layerId, group, options,\r\n  popup, popupOptions, clusterOptions, clusterId, label, labelOptions) {\r\n  (function(){\r\n    var icondf;\r\n\r\n    var getIcon;\r\n    if (icon) {\r\n\r\n      // This cbinds the icon URLs and any other icon options; they're all\r\n      // present on the icon object.\r\n      icondf = new LeafletWidget.DataFrame().cbind(icon);\r\n\r\n      // Constructs an icon from a specified row of the icon dataframe.\r\n      getIcon = function(i) {\r\n        var opts = icondf.get(i);\r\n        if (!opts) {\r\n          return new L.WeatherMarkers.Icon();\r\n        }\r\n\r\n        opts.iconSize= [35, 45];\r\n        opts.iconAnchor=   [17, 42];\r\n        opts.popupAnchor= [1, -32];\r\n        opts.shadowAnchor= [10, 12];\r\n        opts.shadowSize= [36, 16];\r\n        opts.className= 'weather-marker';\r\n        opts.prefix= 'wi';\r\n\r\n        return new L.WeatherMarkers.Icon(opts);\r\n      };\r\n    }\r\n\r\n    if(!($.isEmptyObject(lat) || $.isEmptyObject(lng)) ||\r\n      ($.isNumeric(lat) && $.isNumeric(lng))) {\r\n\r\n      var df = new LeafletWidget.DataFrame()\r\n        .col('lat', lat)\r\n        .col('lng', lng)\r\n        .col('layerId', layerId)\r\n        .col('group', group)\r\n        .col('popup', popup)\r\n        .col('popupOptions', popupOptions)\r\n        .col('label', label)\r\n        .col('labelOptions', labelOptions)\r\n        .cbind(options);\r\n\r\n      if (icon) icondf.effectiveLength = df.nrow();\r\n\r\n      LeafletWidget.methods.addGenericMarkers(\r\n        this, df, group, clusterOptions, clusterId, function(df, i) {\r\n          var options = df.get(i);\r\n          if (icon) options.icon = getIcon(i);\r\n          return L.marker([df.get(i, 'lat'), df.get(i, 'lng')], options);\r\n        });\r\n    }\r\n\r\n  }).call(this);\r\n};\r\n"],"names":["LeafletWidget","methods","addWeatherMarkers","lat","lng","icon","layerId","group","options","popup","popupOptions","clusterOptions","clusterId","label","labelOptions","icondf","getIcon","DataFrame","cbind","i","opts","get","iconSize","iconAnchor","popupAnchor","shadowAnchor","shadowSize","className","prefix","L","WeatherMarkers","Icon","$","isEmptyObject","isNumeric","df","col","effectiveLength","nrow","addGenericMarkers","this","marker","call"],"sourceRoot":""}