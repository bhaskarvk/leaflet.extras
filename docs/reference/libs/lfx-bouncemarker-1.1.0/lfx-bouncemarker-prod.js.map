{"version":3,"file":"lfx-bouncemarker-prod.js","mappings":"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","sources":["webpack://leaflet.extras/./node_modules/leaflet.BounceMarker/bouncemarker.js"],"sourcesContent":["/**\n * Copyright (C) 2013 Maxime Hadjinlian <maxime.hadjinlian@gmail.com>\n * All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function () {\n\n  // Retain the value of the original onAdd and onRemove functions\n  var originalOnAdd = L.Marker.prototype.onAdd;\n  var originalOnRemove = L.Marker.prototype.onRemove;\n\n  // Add bounceonAdd options\n  L.Marker.mergeOptions({\n    bounceOnAdd: false,\n    bounceOnAddOptions: {\n      duration: 1000,\n      height: -1\n    },\n    bounceOnAddCallback: function() {}\n  });\n\n  L.Marker.include({\n\n    _toPoint: function (latlng) {\n      return this._map.latLngToContainerPoint(latlng);\n    },\n    _toLatLng: function (point) {\n      return this._map.containerPointToLatLng(point);\n    },\n\n    _motionStep: function (timestamp, opts) {\n      var self = this;\n      var timePassed = new Date() - opts.start;\n      var progress = timePassed / opts.duration;\n\n      if (progress > 1) {\n        progress = 1;\n      }\n      var delta = self._easeOutBounce(progress);\n      opts.step(delta);\n\n      if (progress === 1) {\n        opts.end();\n        return;\n      }\n\n      L.Util.requestAnimFrame(function(timestamp) {\n        self._motionStep(timestamp, opts);\n      });\n    },\n\n    _bounceMotion: function (duration, callback) {\n      var original = L.latLng(this._origLatlng);\n      var start_y = this._dropPoint.y;\n      var start_x = this._dropPoint.x;\n      var distance = this._point.y - start_y;\n      var self = this;\n\n      L.Util.requestAnimFrame(function(timestamp) {\n        self._motionStep(timestamp, {\n          delay: 10,\n          duration: duration || 1000, // 1 sec by default\n          start: new Date(),\n          step: function (delta) {\n            self._dropPoint.y =\n              start_y\n            + (distance * delta)\n            - (self._map.project(self._map.getCenter()).y - self._origMapCenter.y);\n            self._dropPoint.x =\n              start_x\n            - (self._map.project(self._map.getCenter()).x - self._origMapCenter.x);\n            self.setLatLng(self._toLatLng(self._dropPoint));\n          },\n          end: function () {\n            self.setLatLng(original);\n            if (typeof callback === \"function\") callback();\n          }\n        });\n      });\n    },\n\n    // Many thanks to Robert Penner for this function\n    _easeOutBounce: function (pos) {\n      if ((pos) < (1 / 2.75)) {\n        return (7.5625 * pos * pos);\n      } else if (pos < (2 / 2.75)) {\n        return (7.5625 * (pos -= (1.5 / 2.75)) * pos + 0.75);\n      } else if (pos < (2.5 / 2.75)) {\n        return (7.5625 * (pos -= (2.25 / 2.75)) * pos + 0.9375);\n      } else {\n        return (7.5625 * (pos -= (2.625 / 2.75)) * pos + 0.984375);\n      }\n    },\n\n    // Bounce : if options.height in pixels is not specified, drop from top.\n    // If options.duration is not specified animation is 1s long.\n    bounce: function(options, endCallback) {\n      this._origLatlng = this.getLatLng();\n      this._bounce(options, endCallback);\n    },\n\n    _bounce: function (options, endCallback) {\n      if (typeof options === \"function\") {\n        endCallback = options;\n        options = null;\n      }\n      options = options || {duration: 1000, height: -1};\n\n      //backward compatibility\n      if (typeof options === \"number\") {\n        options.duration = arguments[0];\n        options.height = arguments[1];\n      }\n\n      // Keep original map center\n      this._origMapCenter = this._map.project(this._map.getCenter());\n      this._dropPoint = this._getDropPoint(options.height);\n      this._bounceMotion(options.duration, endCallback);\n    },\n\n    // This will get you a drop point given a height.\n    // If no height is given, the top y will be used.\n    _getDropPoint: function (height) {\n      // Get current coordidates in pixel\n      this._point = this._toPoint(this._origLatlng);\n      var top_y;\n      if (height === undefined || height < 0) {\n        top_y = this._toPoint(this._map.getBounds()._northEast).y;\n      } else {\n        top_y = this._point.y - height;\n      }\n      return new L.Point(this._point.x, top_y);\n    },\n\n    onAdd: function (map) {\n      this._map = map;\n      // Keep original latitude and longitude\n      this._origLatlng = this._latlng;\n\n      // We need to have our drop point BEFORE adding the marker to the map\n      // otherwise, it would create a flicker. (The marker would appear at final\n      // location then move to its drop location, and you may be able to see it.)\n      if (this.options.bounceOnAdd === true) {\n        // backward compatibility\n        if (typeof this.options.bounceOnAddDuration !== \"undefined\") {\n          this.options.bounceOnAddOptions.duration = this.options.bounceOnAddDuration;\n        }\n\n        // backward compatibility\n        if (typeof this.options.bounceOnAddHeight !== \"undefined\") {\n          this.options.bounceOnAddOptions.height = this.options.bounceOnAddHeight;\n        }\n\n        this._dropPoint = this._getDropPoint(this.options.bounceOnAddOptions.height);\n        this.setLatLng(this._toLatLng(this._dropPoint));\n      }\n\n      // Call leaflet original method to add the Marker to the map.\n      originalOnAdd.call(this, map);\n\n      if (this.options.bounceOnAdd === true) {\n        this._bounce(this.options.bounceOnAddOptions, this.options.bounceOnAddCallback);\n      }\n    },\n\n    onRemove: function (map) {\n      clearInterval(this._intervalId);\n      originalOnRemove.call(this, map);\n    }\n  });\n})();\n"],"names":["originalOnAdd","originalOnRemove","L","Marker","prototype","onAdd","onRemove","mergeOptions","bounceOnAdd","bounceOnAddOptions","duration","height","bounceOnAddCallback","include","_toPoint","latlng","this","_map","latLngToContainerPoint","_toLatLng","point","containerPointToLatLng","_motionStep","timestamp","opts","self","progress","Date","start","delta","_easeOutBounce","step","Util","requestAnimFrame","end","_bounceMotion","callback","original","latLng","_origLatlng","start_y","_dropPoint","y","start_x","x","distance","_point","delay","project","getCenter","_origMapCenter","setLatLng","pos","bounce","options","endCallback","getLatLng","_bounce","arguments","_getDropPoint","top_y","undefined","getBounds","_northEast","Point","map","_latlng","bounceOnAddDuration","bounceOnAddHeight","call","clearInterval","_intervalId"],"sourceRoot":""}