{"version":3,"file":"lfx-search-bindings.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0CAA0C;AACzE;AACA;AACA;AACA,kCAAkC,0CAA0C;AAC5E;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,0CAA0C;AACzE;AACA;AACA;AACA,kCAAkC,0CAA0C;AAC5E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qCAAqC;AAC3D;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,sCAAsC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0CAA0C;AAC/E;AACA;AACA;AACA,wCAAwC,0CAA0C;AAClF;AACA;AACA,mBAAmB;AACnB;AACA;AACA,qCAAqC,0CAA0C;AAC/E;AACA;AACA;AACA,wCAAwC,0CAA0C;AAClF;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qCAAqC;AACjE;AACA,iBAAiB;AACjB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oKAAoK,EAAE;AACtK;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA","sources":["webpack://leaflet.extras/./inst/htmlwidgets/bindings/lfx-search-bindings.js"],"sourcesContent":["/* global $, LeafletWidget, L, Shiny, HTMLWidgets, google */\r\n\r\n// helper function to conver JS event to Shiny Event\r\nfunction eventToShiny(e) {\r\n  var shinyEvent = {};\r\n  shinyEvent.latlng = {};\r\n  shinyEvent.latlng.lat = e.latlng.lat;\r\n  shinyEvent.latlng.lng = e.latlng.lng;\r\n  if(!$.isEmptyObject(e.title)) {\r\n    shinyEvent.title = e.title;\r\n  }\r\n  if(!$.isEmptyObject(e.layer)) {\r\n    shinyEvent.layer = e.layer.toGeoJSON();\r\n  }\r\n  return shinyEvent;\r\n}\r\n\r\nLeafletWidget.methods.addSearchOSM = function(options) {\r\n\r\n  (function(){\r\n    var map = this;\r\n\r\n    if(map.searchControlOSM) {\r\n      map.searchControlOSM.remove(map);\r\n      delete map.searchControlOSM;\r\n    }\r\n\r\n    options = options || {};\r\n    options.textPlaceholder = options.textPlaceholder ? options.textPlaceholder : 'Search using OSM Geocoder';\r\n    options.url = options.url ? options.url : 'https://nominatim.openstreetmap.org/search?format=json&q={s}';\r\n    options.jsonpParam = options.jsonpParam ? options.jsonpParam : 'json_callback';\r\n    options.propertyName = options.propertyName ? options.propertyName : 'display_name';\r\n    options.propertyLoc = options.propertyLoc ? options.propertyLoc : ['lat','lon'];\r\n\r\n    // https://github.com/stefanocudini/leaflet-search/issues/129\r\n    options.marker = L.circleMarker([0,0],{radius:30});\r\n\r\n    if(options.moveToLocation) {\r\n      options.moveToLocation = function(latlng, title, map) {\r\n        var zoom = options.zoom || 16;\r\n        var maxZoom = map.getMaxZoom();\r\n        if(maxZoom && zoom > maxZoom) {\r\n          zoom = maxZoom;\r\n        }\r\n        map.setView(latlng, zoom);\r\n      };\r\n    }\r\n\r\n    map.searchControlOSM = new L.Control.Search(options);\r\n    map.searchControlOSM.addTo(map);\r\n\r\n    map.searchControlOSM.on('search:locationfound', function(e){\r\n      // Shiny stuff\r\n      if (!HTMLWidgets.shinyMode) return;\r\n      Shiny.onInputChange(map.id+'_search_location_found', eventToShiny(e));\r\n    });\r\n\r\n  }).call(this);\r\n};\r\n\r\nLeafletWidget.methods.removeSearchOSM = function() {\r\n  (function(){\r\n\r\n    var map = this;\r\n\r\n    if(map.searchControlOSM) {\r\n      map.searchControlOSM.remove(map);\r\n      delete map.searchControlOSM;\r\n    }\r\n  }).call(this);\r\n};\r\n\r\nLeafletWidget.methods.addReverseSearchOSM = function(options, group) {\r\n  (function() {\r\n\r\n    var map = this;\r\n\r\n    group = group || 'reverse_search_osm' ;\r\n    map.layerManager.clearGroup(group);\r\n\r\n    var displayControl = document.getElementById('reverseSearchOSM');\r\n\r\n    var searchURL = 'https://nominatim.openstreetmap.org/reverse?format=json&polygon_geojson=1';\r\n\r\n    map.on('click', function(e){\r\n\r\n      var latlng = e.latlng;\r\n\r\n      // This will hold the query, boundingbox, and found feature layers\r\n      var container = L.featureGroup();\r\n      var layerID = L.stamp(container);\r\n\r\n      if(options.showSearchLocation) {\r\n        var marker = L.marker(e.latlng,{'type': 'query'}).bindTooltip(\r\n          'lat='+latlng.lat+' lng='+latlng.lng+'</P>');\r\n        /* eslint-disable no-unused-vars */\r\n        var m_layerID = L.stamp(marker);\r\n        /* eslint-enable no-unused-vars */\r\n        container.addLayer(marker);\r\n      }\r\n\r\n      var query = searchURL + '&lat=' + latlng.lat + '&lon=' + latlng.lng;\r\n\r\n      $.ajax({url: query, dataType: 'json'}).done(function(result){\r\n\r\n        if(!$.isEmptyObject(displayControl)) {\r\n          var displayText = '<div>';\r\n          displayText = displayText + 'Display Name: ' +\r\n            ( (result.display_name) ?  result.display_name : '' ) + '<br/>';\r\n          displayText =  displayText + '</div>';\r\n          displayControl.innerHTML = displayText;\r\n        }\r\n\r\n        var bb = L.latLngBounds(\r\n          L.latLng(result.boundingbox[0],result.boundingbox[2]),\r\n          L.latLng(result.boundingbox[1], result.boundingbox[3]));\r\n\r\n        if(options.showBounds) {\r\n          var rect = L.rectangle(bb, {\r\n            weight:2, color: '#444444', clickable: false,\r\n            dashArray: '5,10', 'type': 'result_boundingbox'});\r\n          /* eslint-disable no-unused-vars */\r\n          var bb_layerID = L.stamp(rect);\r\n          /* eslint-enable no-unused-vars */\r\n          container.addLayer(rect);\r\n        }\r\n\r\n        if(options.showFeature) {\r\n          var feature = L.geoJson(result.geojson,\r\n            {\r\n              weight:2, color: 'red', dashArray: '5,10',\r\n              clickable : false, 'type': 'result_feature',\r\n              pointToLayer: function(feature, latlng) {\r\n                return L.circleMarker(latlng,{\r\n                  weight:2, color: 'red', dashArray: '5,10', clickable : false});\r\n              }\r\n            });\r\n\r\n          /* eslint-disable no-unused-vars */\r\n          var f_layerID = L.stamp(feature);\r\n          /* eslint-enable no-unused-vars */\r\n          container.addLayer(feature);\r\n        }\r\n\r\n        var tmp = container.getLayers();\r\n        if(!$.isEmptyObject(tmp) && tmp.length >= 0) {\r\n\r\n          if(!$.isEmptyObject(marker)) {\r\n            marker.on('mouseover', function(e){\r\n              if(!$.isEmptyObject(rect)) {\r\n                rect.setStyle({fillOpacity: 0.5, opacity: 0.8, weight: 5});\r\n                rect.bringToFront();\r\n              }\r\n              if(!$.isEmptyObject(feature)) {\r\n                feature.setStyle({fillOpacity: 0.5, opacity: 0.8, weight: 5});\r\n                feature.bringToFront();\r\n              }\r\n            });\r\n            marker.on('mouseout', function(e){\r\n              if(!$.isEmptyObject(rect)) {\r\n                rect.setStyle({fillOpacity: 0.2, opacity: 0.5, weight: 2});\r\n                rect.bringToBack();\r\n              }\r\n              if(!$.isEmptyObject(feature)) {\r\n                feature.setStyle({fillOpacity: 0.2, opacity: 0.5, weight: 2});\r\n                feature.bringToBack();\r\n              }\r\n            });\r\n          }\r\n\r\n          map.layerManager.addLayer(container, 'search', layerID, group);\r\n          if(options.fitBounds)\r\n            map.fitBounds(container.getBounds());\r\n        }\r\n\r\n        if (HTMLWidgets.shinyMode) {\r\n          Shiny.onInputChange(map.id+'_reverse_search_feature_found',{\r\n            'query': {'lat': latlng.lat, 'lng': latlng.lng},\r\n            'result': result\r\n          });\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n  }).call(this);\r\n};\r\n\r\nLeafletWidget.methods.addSearchGoogle = function(options) {\r\n\r\n  (function(){\r\n    var map = this;\r\n\r\n    if(map.searchControlGoogle) {\r\n      map.searchControlGoogle.remove(map);\r\n      delete map.searchControlGoogle;\r\n    }\r\n\r\n    var geocoder = new google.maps.Geocoder();\r\n\r\n    function googleGeocoding(text, callResponse) {\r\n      geocoder.geocode({address: text}, callResponse);\r\n    }\r\n\r\n    function formatJSON(rawjson) {\r\n      var json = {},\r\n        key, loc;\r\n\r\n      for(var i in rawjson) {\r\n        key = rawjson[i].formatted_address;\r\n        loc = L.latLng( rawjson[i].geometry.location.lat(), rawjson[i].geometry.location.lng() );\r\n        json[ key ]= loc; //key,value format\r\n      }\r\n      return json;\r\n    }\r\n\r\n    options = options || {};\r\n    options.markerLocation = true;\r\n    options.textPlaceholder = options.textPlaceholder ? options.textPlaceholder : 'Search using Google Geocoder';\r\n\r\n    // https://github.com/stefanocudini/leaflet-search/issues/129\r\n    options.marker = L.circleMarker([0,0],{radius:30});\r\n\r\n    if(options.moveToLocation) {\r\n      options.moveToLocation = function(latlng, title, map) {\r\n        var zoom = options.zoom || 16;\r\n        var maxZoom = map.getMaxZoom();\r\n        if(maxZoom && zoom > maxZoom) {\r\n          zoom = maxZoom;\r\n        }\r\n        map.setView(latlng, zoom);\r\n      };\r\n    }\r\n\r\n    options.sourceData = googleGeocoding;\r\n    options.formatData = formatJSON;\r\n\r\n    map.searchControlGoogle = new L.Control.Search(options);\r\n    map.searchControlGoogle.addTo(map);\r\n\r\n    map.searchControlGoogle.on('search:locationfound', function(e){\r\n      // Shiny stuff\r\n      if (!HTMLWidgets.shinyMode) return;\r\n      Shiny.onInputChange(map.id+'_search_location_found', eventToShiny(e));\r\n    });\r\n\r\n  }).call(this);\r\n};\r\n\r\nLeafletWidget.methods.removeSearchGoogle = function() {\r\n  (function(){\r\n\r\n    var map = this;\r\n\r\n    if(map.searchControlGoogle) {\r\n      map.searchControlGoogle.remove(map);\r\n      delete map.searchControlGoogle;\r\n    }\r\n  }).call(this);\r\n};\r\n\r\nLeafletWidget.methods.addReverseSearchGoogle = function(options, group) {\r\n  (function() {\r\n\r\n    var map = this;\r\n\r\n    group = group || 'reverse_search_google' ;\r\n    map.layerManager.clearGroup(group);\r\n\r\n    var displayControl = document.getElementById('reverseSearchGoogle');\r\n\r\n    var geocoder = new google.maps.Geocoder();\r\n\r\n    map.on('click', function(e){\r\n\r\n      var latlng = e.latlng;\r\n\r\n      // This will hold the query, boundingbox, and found feature layers\r\n      var container = L.featureGroup();\r\n      var layerID = L.stamp(container);\r\n\r\n      if(options.showSearchLocation) {\r\n        var marker = L.marker(e.latlng,{'type': 'query'}).bindTooltip(\r\n          'lat='+latlng.lat+' lng='+latlng.lng+'</P>');\r\n        /* eslint-disable no-unused-vars */\r\n        var m_layerID = L.stamp(marker);\r\n        /* eslint-enable no-unused-vars */\r\n        container.addLayer(marker);\r\n      }\r\n\r\n      geocoder.geocode(\r\n        {'location': {'lat': latlng.lat, 'lng': latlng.lng}},\r\n        function(results, status) {\r\n\r\n          if(status === 'OK') {\r\n            if(results[0]) {\r\n              var result = results[0];\r\n\r\n              if(!$.isEmptyObject(displayControl)) {\r\n                var displayText = '<div>';\r\n                displayText = displayText + 'Address: ' +\r\n                  ( (result.formatted_address) ?  result.formatted_address : '' ) + '<br/>';\r\n                displayText =  displayText + '</div>';\r\n                displayControl.innerHTML = displayText;\r\n              }\r\n\r\n              var bb = L.latLngBounds(\r\n                L.latLng(result.geometry.viewport.f.f,\r\n                  result.geometry.viewport.b.b),\r\n                L.latLng(result.geometry.viewport.f.b,\r\n                  result.geometry.viewport.b.f));\r\n\r\n              if(options.showBounds) {\r\n                var rect = L.rectangle(bb, {\r\n                  weight:2, color: '#444444', clickable: false,\r\n                  dashArray: '5,10', 'type': 'result_boundingbox'});\r\n                /* eslint-disable no-unused-vars */\r\n                var bb_layerID = L.stamp(rect);\r\n                /* eslint-enable no-unused-vars */\r\n                container.addLayer(rect);\r\n              }\r\n\r\n              if(options.showFeature) {\r\n                var feature = L.circleMarker(\r\n                  L.latLng(\r\n                    result.geometry.location.lat(),\r\n                    result.geometry.location.lng()\r\n                  ), {\r\n                    weight:2, color: 'red', dashArray: '5,10',\r\n                    clickable : false, 'type': 'result_feature'\r\n                  }\r\n                );\r\n\r\n                /* eslint-disable no-unused-vars */\r\n                var f_layerID = L.stamp(feature);\r\n                /* eslint-disable no-unused-vars */\r\n                container.addLayer(feature);\r\n              }\r\n\r\n              var tmp = container.getLayers();\r\n              if(!$.isEmptyObject(tmp) && tmp.length >= 0) {\r\n\r\n                if(!$.isEmptyObject(marker)) {\r\n                  marker.on('mouseover', function(e){\r\n                    if(!$.isEmptyObject(rect)) {\r\n                      rect.setStyle({fillOpacity: 0.5, opacity: 0.8, weight: 5});\r\n                      rect.bringToFront();\r\n                    }\r\n                    if(!$.isEmptyObject(feature)) {\r\n                      feature.setStyle({fillOpacity: 0.5, opacity: 0.8, weight: 5});\r\n                      feature.bringToFront();\r\n                    }\r\n                  });\r\n                  marker.on('mouseout', function(e){\r\n                    if(!$.isEmptyObject(rect)) {\r\n                      rect.setStyle({fillOpacity: 0.2, opacity: 0.5, weight: 2});\r\n                      rect.bringToBack();\r\n                    }\r\n                    if(!$.isEmptyObject(feature)) {\r\n                      feature.setStyle({fillOpacity: 0.2, opacity: 0.5, weight: 2});\r\n                      feature.bringToBack();\r\n                    }\r\n                  });\r\n                }\r\n\r\n                map.layerManager.addLayer(container, 'search', layerID, group);\r\n                if(options.fitBounds)\r\n                  map.fitBounds(container.getBounds());\r\n              }\r\n\r\n              if (HTMLWidgets.shinyMode) {\r\n                Shiny.onInputChange(map.id+'_reverse_search_feature_found',{\r\n                  'query': {'lat': latlng.lat, 'lng': latlng.lng},\r\n                  'result': result\r\n                });\r\n              }\r\n            } else {\r\n              if(!$.isEmptyObject(displayControl))\r\n                displayControl.innerHTML = 'No Results Found';\r\n              /* eslint-disable no-console */\r\n              console.error('No Results Found');\r\n              /* eslint-enable no-console */\r\n            }\r\n          } else {\r\n            if(!$.isEmptyObject(displayControl))\r\n              displayControl.innerHTML = 'Reverse Geocoding failed due to: ' + status;\r\n            /* eslint-disable no-console */\r\n            console.error('Reverse Geocoing failed due to: ' + status);\r\n            /* eslint-enable no-console */\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }).call(this);\r\n};\r\n\r\n\r\nLeafletWidget.methods.addSearchUSCensusBureau = function(options) {\r\n  (function(){\r\n    var map = this;\r\n\r\n    if(map.searchControlUSCensusBureau) {\r\n      map.searchControlUSCensusBureau.remove(map);\r\n      delete map.searchControlUSCensusBureau;\r\n    }\r\n\r\n    function formatJSON(rawjson) {\r\n      var json = {}, key, loc;\r\n\r\n      for (var i in rawjson.result.addressMatches) {\r\n        key = rawjson.result.addressMatches[i].matchedAddress;\r\n        loc = L.latLng(rawjson.result.addressMatches[i].coordinates.y, rawjson.result.addressMatches[i].coordinates.x);\r\n        json[key] = loc; //key,value format\r\n      }\r\n      return json;\r\n    }\r\n\r\n    options = options || {};\r\n\r\n    options.url = options.url ? options.url : 'https://geocoding.geo.census.gov/geocoder/locations/onelineaddress?benchmark=Public_AR_Current&format=jsonp&address={s}';\r\n    options.textPlaceholder = options.textPlaceholder ? options.textPlaceholder : 'Search using US Census Bureau TEST';\r\n\r\n    options.jsonpParam = options.jsonpParam ? options.jsonpParam : 'callback';\r\n    options.formatData = formatJSON;\r\n\r\n    // https://github.com/stefanocudini/leaflet-search/issues/129\r\n    options.marker = L.circleMarker([0,0],{radius:30});\r\n\r\n    if(options.moveToLocation) {\r\n      options.moveToLocation = function(latlng, title, map) {\r\n        var zoom = options.zoom || 16;\r\n        var maxZoom = map.getMaxZoom();\r\n        if(maxZoom && zoom > maxZoom) {\r\n          zoom = maxZoom;\r\n        }\r\n        map.setView(latlng, zoom);\r\n      };\r\n    }\r\n\r\n    map.searchControlUSCensusBureau = new L.Control.Search(options);\r\n    map.searchControlUSCensusBureau.addTo(map);\r\n\r\n    map.searchControlUSCensusBureau.on('search:locationfound', function(e){\r\n      // Shiny stuff\r\n      if (!HTMLWidgets.shinyMode) return;\r\n      Shiny.onInputChange(map.id+'_search_location_found', eventToShiny(e));\r\n    });\r\n\r\n  }).call(this);\r\n};\r\n\r\nLeafletWidget.methods.removeSearchUSCensusBureau = function() {\r\n  (function(){\r\n\r\n    var map = this;\r\n\r\n    if(map.searchControlUSCensusBureau) {\r\n      map.searchControlUSCensusBureau.remove(map);\r\n      delete map.searchControlUSCensusBureau;\r\n    }\r\n  }).call(this);\r\n};\r\n\r\n\r\nLeafletWidget.methods.addSearchFeatures = function(targetGroups, options){\r\n\r\n  (function(){\r\n    var map = this;\r\n\r\n    if(map.searchControl) {\r\n      map.searchControl.remove(map);\r\n      delete map.searchControl;\r\n    }\r\n\r\n    options = options || {};\r\n\r\n    if(options.moveToLocation) {\r\n      options.moveToLocation = function(latlng, title, map) {\r\n        var zoom = options.zoom || 16;\r\n        var maxZoom = map.getMaxZoom();\r\n        if(maxZoom && zoom > maxZoom) {\r\n          zoom = maxZoom;\r\n        }\r\n        map.setView(latlng, zoom);\r\n      };\r\n    }\r\n\r\n    // FeatureGroup that will be searched\r\n    var searchFeatureGroup;\r\n\r\n    // if we have just one group to search use it.\r\n    if(!L.Util.isArray(targetGroups)) {\r\n      var target = map.layerManager.getLayerGroup(targetGroups, false);\r\n      if(target) {\r\n        searchFeatureGroup = target;\r\n        map._searchFeatureGroupName = targetGroups;\r\n      } else {\r\n        // throw an error if we can't find the target FeatureGroup layer\r\n        throw 'Group with ID \"'+targetGroups+'\" not found';\r\n      }\r\n    } else { // if we have more than one groups to search create a new seach group with them.\r\n\r\n      searchFeatureGroup = map.layerManager.getLayerGroup('search', true);\r\n      map._searchFeatureGroupName = 'search';\r\n\r\n      $.each(targetGroups, function(k, v) {\r\n        var target = map.layerManager.getLayerGroup(v, false);\r\n        // may be remove target from map before adding to searchFeatureGroup\r\n        if(target) {\r\n          searchFeatureGroup.addLayer(target);\r\n        } else {\r\n          /* eslint-disable no-console */\r\n          console.warn('Group with ID \"' + v + '\" not Found, skipping');\r\n          /* eslint-enable no-console */\r\n        }\r\n      });\r\n    }\r\n\r\n    L.stamp(searchFeatureGroup);\r\n    options.layer = searchFeatureGroup;\r\n    map.searchControl = new L.Control.Search(options);\r\n    map.searchControl.addTo(map);\r\n\r\n    map.searchControl.on('search:locationfound', function(e){\r\n      if(options.openPopup && e.layer._popup) {\r\n        e.layer.openPopup();\r\n      }\r\n      // Shiny stuff\r\n      if (!HTMLWidgets.shinyMode) return;\r\n      Shiny.onInputChange(map.id+'_search_location_found', eventToShiny(e));\r\n    });\r\n\r\n  }).call(this);\r\n};\r\n\r\nLeafletWidget.methods.removeSearchFeatures = function(clearFeatures) {\r\n  (function(){\r\n\r\n    var map = this;\r\n\r\n    if(map.searchControl) {\r\n      map.searchControl.remove(map);\r\n      delete map.searchControl;\r\n    }\r\n    if(clearFeatures && map._searchFeatureGroupName) {\r\n      map.layerManager.clearGroup(map._searchFeatureGroupName);\r\n      delete map._searchFeatureGroupName ;\r\n    }\r\n  }).call(this);\r\n\r\n};\r\n"],"names":[],"sourceRoot":""}