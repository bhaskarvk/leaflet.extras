(()=>{var n={390:(n,t,r)=>{r(607),r(4),r(80),r(338),r(289),r(921)},607:n=>{n.exports=function(n,t,r){var e=!1;if(void 0===window.XMLHttpRequest)return t(Error("Browser not supported"));if(void 0===r){var o=n.match(/^\s*https?:\/\/[^\/]*/);r=o&&o[0]!==location.protocol+"//"+location.hostname+(location.port?":"+location.port:"")}var i=new window.XMLHttpRequest;if(r&&!("withCredentials"in i)){i=new window.XDomainRequest;var u=t;t=function(){if(e)u.apply(this,arguments);else{var n=this,t=arguments;setTimeout((function(){u.apply(n,t)}),0)}}}function l(){var n;void 0===i.status||(n=i.status)>=200&&n<300||304===n?t.call(i,null,i):t.call(i,i,null)}return"onload"in i?i.onload=l:i.onreadystatechange=function(){4===i.readyState&&l()},i.onerror=function(n){t.call(this,n||!0,null),t=function(){}},i.onprogress=function(){},i.ontimeout=function(n){t.call(this,n,null),t=function(){}},i.onabort=function(n){t.call(this,n,null),t=function(){}},i.open("GET",n,!0),i.send(null),e=!0,i}},338:n=>{"use strict";var t={};function r(n,t){n=Math.round(n*t),(n<<=1)<0&&(n=~n);for(var r="";n>=32;)r+=String.fromCharCode(63+(32|31&n)),n>>=5;return r+String.fromCharCode(n+63)}function e(n){for(var t=[],r=0;r<n.length;r++)t.push(n[r].slice().reverse());return t}t.decode=function(n,t){for(var r,e=0,o=0,i=0,u=[],l=0,s=0,a=null,c=Math.pow(10,t||5);e<n.length;){a=null,l=0,s=0;do{s|=(31&(a=n.charCodeAt(e++)-63))<<l,l+=5}while(a>=32);r=1&s?~(s>>1):s>>1,l=s=0;do{s|=(31&(a=n.charCodeAt(e++)-63))<<l,l+=5}while(a>=32);o+=r,i+=1&s?~(s>>1):s>>1,u.push([o/c,i/c])}return u},t.encode=function(n,t){if(!n.length)return"";for(var e=Math.pow(10,t||5),o=r(n[0][0],e)+r(n[0][1],e),i=1;i<n.length;i++){var u=n[i],l=n[i-1];o+=r(u[0]-l[0],e),o+=r(u[1]-l[1],e)}return o},t.fromGeoJSON=function(n,r){if(n&&"Feature"===n.type&&(n=n.geometry),!n||"LineString"!==n.type)throw new Error("Input must be a GeoJSON LineString");return t.encode(e(n.coordinates),r)},t.toGeoJSON=function(n,r){return{type:"LineString",coordinates:e(t.decode(n,r))}},n.exports&&(n.exports=t)},80:n=>{n.exports=e,n.exports.parse=e,n.exports.stringify=function n(t){function r(n){return n.join(" ")}function e(n){return n.map(r).join(", ")}function o(n){return n.map(e).map(i).join(", ")}function i(n){return"("+n+")"}switch("Feature"===t.type&&(t=t.geometry),t.type){case"Point":return"POINT ("+r(t.coordinates)+")";case"LineString":return"LINESTRING ("+e(t.coordinates)+")";case"Polygon":return"POLYGON ("+o(t.coordinates)+")";case"MultiPoint":return"MULTIPOINT ("+e(t.coordinates)+")";case"MultiPolygon":return"MULTIPOLYGON ("+t.coordinates.map(o).map(i).join(", ")+")";case"MultiLineString":return"MULTILINESTRING ("+o(t.coordinates)+")";case"GeometryCollection":return"GEOMETRYCOLLECTION ("+t.geometries.map(n).join(", ")+")";default:throw new Error("stringify requires a valid GeoJSON Feature or geometry object as input")}};var t=/[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/,r=new RegExp("^"+t.source+"(\\s"+t.source+"){1,}");function e(n){var t,e=n.split(";"),o=e.pop(),i=(e.shift()||"").split("=").pop(),u=0;function l(n){var t=o.substring(u).match(n);return t?(u+=t[0].length,t[0]):null}function s(){l(/^\s*/)}function a(){s();for(var n,t=0,e=[],o=[e],i=e;n=l(/^(\()/)||l(/^(\))/)||l(/^(\,)/)||l(r);){if("("===n)o.push(i),i=[],o[o.length-1].push(i),t++;else if(")"===n){if(0===i.length)return null;if(!(i=o.pop()))return null;if(0==--t)break}else if(","===n)i=[],o[o.length-1].push(i);else{if(n.split(/\s/g).some(isNaN))return null;Array.prototype.push.apply(i,n.split(/\s/g).map(parseFloat))}s()}return 0!==t?null:e}function c(){for(var n,t,e=[];t=l(r)||l(/^(\,)/);)","===t?(e.push(n),n=[]):t.split(/\s/g).some(isNaN)||(n||(n=[]),Array.prototype.push.apply(n,t.split(/\s/g).map(parseFloat))),s();return n?(e.push(n),e.length?e:null):null}return(t=function n(){return function(){if(!l(/^(point)/i))return null;if(s(),!l(/^(\()/))return null;var n=c();return n?(s(),l(/^(\))/)?{type:"Point",coordinates:n[0]}:null):null}()||function(){if(!l(/^(linestring)/i))return null;if(s(),!l(/^(\()/))return null;var n=c();return n&&l(/^(\))/)?{type:"LineString",coordinates:n}:null}()||function(){if(!l(/^(polygon)/i))return null;s();var n=a();return n?{type:"Polygon",coordinates:n}:null}()||function(){if(!l(/^(multipoint)/i))return null;s();var n=o.substring(o.indexOf("(")+1,o.length-1).replace(/\(/g,"").replace(/\)/g,"");o="MULTIPOINT ("+n+")";var t=a();return t?(s(),{type:"MultiPoint",coordinates:t}):null}()||function(){if(!l(/^(multilinestring)/i))return null;s();var n=a();return n?(s(),{type:"MultiLineString",coordinates:n}):null}()||function(){if(!l(/^(multipolygon)/i))return null;s();var n=a();return n?{type:"MultiPolygon",coordinates:n}:null}()||function(){var t,r=[];if(!l(/^(geometrycollection)/i))return null;if(s(),!l(/^(\()/))return null;for(;t=n();)r.push(t),s(),l(/^(\,)/),s();return l(/^(\))/)?{type:"GeometryCollection",geometries:r}:null}()}())&&i.match(/\d+/)&&(t.crs={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+i}}),t}},4:n=>{"use strict";n.exports=csv2geojson},921:n=>{"use strict";n.exports=toGeoJSON},289:n=>{"use strict";n.exports=topojson}},t={};!function r(e){var o=t[e];if(void 0!==o)return o.exports;var i=t[e]={exports:{}};return n[e](i,i.exports,r),i.exports}(390)})();
//# sourceMappingURL=lfx-omnivore-prod.js.map